//main.dart


import 'package:flutter/material.dart';
import 'todo_page.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: TodoPage(),
    );
  }
}


//todo_page.dart

import 'package:flutter/material.dart';

class TodoPage extends StatefulWidget {
  const TodoPage({super.key});

  @override
  State<TodoPage> createState() => _TodoPageState();
}

class _TodoPageState extends State<TodoPage> {

  late List<String> tasks;
  late TextEditingController taskController;

  @override
  void initState() {
    // TODO: implement initState
    setState(() {
      tasks = [];
      taskController = TextEditingController();
    });
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(

        title: Text("To Do App",style: TextStyle(color: Colors.white),),
        backgroundColor: Colors.deepOrangeAccent,
      ),
      floatingActionButton: FloatingActionButton(
        backgroundColor: Colors.deepOrangeAccent,
          onPressed: () {
            taskController.clear();
            showDialog(context: context, builder: (context) => Dialog(
              child: Container(
                width: 300,
                height: 200,
                child: Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      SizedBox(
                        width: 250,
                        child: TextFormField(
                          controller: taskController,
                          decoration: InputDecoration(
                            label: Text("Task Name"),
                            border: OutlineInputBorder()
                          ),
                        ),
                      ),
                      SizedBox(
                        height: 20,
                      ),
                      Row(
                        mainAxisAlignment: MainAxisAlignment.end,
                          children: [
                        TextButton(onPressed: () {
                          if (taskController.text != "") {
                                      setState(() {
                                        tasks.add(taskController.text);
                                      });
                                      Navigator.pop(context);
                                    }
                                  },
                          child: Text("Save"),
                        ),
                        TextButton(onPressed: () {
                          Navigator.pop(context);
                        },
                            child: Text("Cancel"))
                      ],)
                    ],
                  ),
                ),
              ),
            ));
          },
        child: Icon(Icons.add,color: Colors.white,),
      ),
      body:(tasks.length == 0)?
          Center(child: Text("Empty",
            style: TextStyle(fontStyle: FontStyle.italic),
          ),)
          : ListView.builder(
        itemBuilder: (BuildContext context, int index) {
          return ListTile(
            title: Text(tasks[index]),
            trailing: IconButton(onPressed: (){
              setState(() {
                tasks.removeAt(index);
              });
            }, icon: Icon(Icons.delete,color: Colors.deepOrangeAccent,)
            ),
          );
        },
      itemCount: tasks.length,
      ),
    );
  }
}
//
